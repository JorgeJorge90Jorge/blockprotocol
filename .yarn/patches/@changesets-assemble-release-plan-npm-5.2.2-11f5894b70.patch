diff --git a/dist/assemble-release-plan.cjs.dev.js b/dist/assemble-release-plan.cjs.dev.js
index 3a37c62c975518f975c22e1b4b3974d9b325a5da..146db90b2ce2a85fe26923f122df25eea964465b 100644
--- a/dist/assemble-release-plan.cjs.dev.js
+++ b/dist/assemble-release-plan.cjs.dev.js
@@ -145,6 +145,7 @@ function determineDependents({
           } else if ((!releases.has(dependent) || releases.get(dependent).type === "none") && (config.___experimentalUnsafeOptions_WILL_CHANGE_IN_PATCH.updateInternalDependents === "always" || !semver__default['default'].satisfies(incrementVersion(nextRelease, preInfo), versionRange))) {
             switch (depType) {
               case "dependencies":
+              case "devDependencies":
               case "optionalDependencies":
               case "peerDependencies":
                 if (type !== "major" && type !== "minor") {
@@ -152,14 +153,6 @@ function determineDependents({
                 }
 
                 break;
-
-              case "devDependencies":
-                {
-                  // We don't need a version bump if the package is only in the devDependencies of the dependent package
-                  if (type !== "major" && type !== "minor" && type !== "patch") {
-                    type = "none";
-                  }
-                }
             }
           }
         }
diff --git a/dist/assemble-release-plan.cjs.prod.js b/dist/assemble-release-plan.cjs.prod.js
index 87b4c104bf3fa53ba498ced6f81eda0ed4c86436..ad83a1648e57763fb7fd01571537fde4561303fa 100644
--- a/dist/assemble-release-plan.cjs.prod.js
+++ b/dist/assemble-release-plan.cjs.prod.js
@@ -80,13 +80,11 @@ function determineDependents({releases: releases, packagesByName: packagesByName
           onlyUpdatePeerDependentsWhenOutOfRange: config.___experimentalUnsafeOptions_WILL_CHANGE_IN_PATCH.onlyUpdatePeerDependentsWhenOutOfRange
         })) type = "major"; else if (!(releases.has(dependent) && "none" !== releases.get(dependent).type || "always" !== config.___experimentalUnsafeOptions_WILL_CHANGE_IN_PATCH.updateInternalDependents && semver__default.default.satisfies(incrementVersion(nextRelease, preInfo), versionRange))) switch (depType) {
          case "dependencies":
+         case "devDependencies":
          case "optionalDependencies":
          case "peerDependencies":
           "major" !== type && "minor" !== type && (type = "patch");
           break;
-
-         case "devDependencies":
-          "major" !== type && "minor" !== type && "patch" !== type && (type = "none");
         }
       }
       return releases.has(dependent) && releases.get(dependent).type === type && (type = void 0), 
diff --git a/dist/assemble-release-plan.esm.js b/dist/assemble-release-plan.esm.js
index c29c008dd709f07cabcb07feff86012c35a01ce5..5632dfb3b1f9d7d800c4d0213e2a73ad8507e7dd 100644
--- a/dist/assemble-release-plan.esm.js
+++ b/dist/assemble-release-plan.esm.js
@@ -137,6 +137,7 @@ function determineDependents({
           } else if ((!releases.has(dependent) || releases.get(dependent).type === "none") && (config.___experimentalUnsafeOptions_WILL_CHANGE_IN_PATCH.updateInternalDependents === "always" || !semver.satisfies(incrementVersion(nextRelease, preInfo), versionRange))) {
             switch (depType) {
               case "dependencies":
+              case "devDependencies":
               case "optionalDependencies":
               case "peerDependencies":
                 if (type !== "major" && type !== "minor") {
@@ -144,14 +145,6 @@ function determineDependents({
                 }
 
                 break;
-
-              case "devDependencies":
-                {
-                  // We don't need a version bump if the package is only in the devDependencies of the dependent package
-                  if (type !== "major" && type !== "minor" && type !== "patch") {
-                    type = "none";
-                  }
-                }
             }
           }
         }
